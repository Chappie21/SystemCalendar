{"version":3,"sources":["components/PrincipalComponents.js","pages/Inicio.js","components/Msgresponse.js","pages/Login.js","components/Imgmsg.js","images/RegisterFondo.png","pages/Register.js","pages/Sesion.js","App.js","index.js"],"names":["withRouter","props","history","className","Title","Text","name","onClick","push","Mensajes","Mensaje","Math","floor","random","length","Inicio","React","Component","Msgresponse","style","backgroundColor","color","fontSize","border","borderRadius","padding","status","msg","ComprobarStatus","Login","useState","UserName","Clave","ResultServer","datos","setDatos","handleChange","e","target","value","console","log","id","onSubmit","preventDefault","datosform","FormData","document","getElementById","fetch","method","mode","body","then","response","json","catch","err","error","form","exito","message","type","placeholder","onChange","to","Imgmsg","backgroundImage","img","backgroundSize","title","Register","Correo","ConfirmarClave","serverResponse","FormError","handleChangeData","verifFormulario","verificarContraseñas","Fondo","paquete","Sesion","App","exact","path","component","contenedor","ReactDOM","render"],"mappings":"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","file":"static/js/main.5ccf1f16.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom'\n\nimport './css/PrincipalComponents.css'\n\nconst Cardnav = (props) => {\n\n    const { history } = props\n\n    return (\n        <Fragment>\n            <div>\n                <div className=\"cardContainer\">\n                    <div className=\"textHeader\">\n                        <header className=\"Title\">\n                            <h1>{props.Title}</h1>\n                        </header>\n                        <div>\n                            <p>\n                                {props.Text}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"button-container\">\n                        <button name=\"login\" className=\"button-menu\"\n                            onClick={() => history.push('/login')}>Iniciar Sesion</button>\n                        <button name=\"register\" className=\"button-menu\"\n                            onClick={() => history.push('/register')}>Registrarse</button>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\n\nexport default withRouter(Cardnav);","import React from 'react';\nimport Cardnav from '../components/PrincipalComponents'\n\nconst Mensajes = [\"Comience una vida más organziada, cree su propio sistema de calendario\",\n                 \"¿Depende mucho de su tiempo? ¡es hora de distribuirlo!\",\n                 \"El tiempo es valioso, y organizarlo hará que valga la pena\",\n                 \"¡Comparta su tiempo con sus amigos o colegas!\"];\n\nvar Mensaje = Mensajes[Math.floor(Math.random() * Mensajes.length)];\n\n\n\nclass Inicio extends React.Component{\n\n    render(){\n\n        return(\n            <div>\n                <Cardnav Title = \"SystemCalendar\" Text = {Mensaje} />\n            </div>\n        );\n\n    }\n\n}\n\nexport default Inicio;","import React, { Fragment } from 'react';\n\nconst Msgresponse = (props) => {\n\n    const ComprobarStatus = () => {\n\n        let style = {\n            backgroundColor: '',\n            color: '',\n            fontSize: '15px',\n            border: '',\n            borderRadius: '5px',\n            padding: '8px'\n        }\n\n        if((props.status >= 200 && props.status <= 207) || (props.color === 'green')){  \n            style['backgroundColor'] = 'rgb(154, 205, 50)';\n            style['color'] = 'green';\n            style['border'] = 'solid green 3px';\n        }else if((props.status >= 400 && props.status <= 413) || (props.color === 'yellow')){\n            style['backgroundColor'] = 'rgb(250, 250, 210)';\n            style['color'] = 'rgb(255, 215, 0)';\n            style['border'] = 'solid rgb(255, 215, 0) 3px';\n        }else if((props.status >= 500 && props.status <= 503) || (props.color === 'red')){\n            style['backgroundColor'] = 'rgb(240, 128, 128)';\n            style['color'] = 'rgb(178, 34, 34)';\n            style['border'] = 'solid rgb(178, 34, 34) 3px';\n        }\n\n        return (\n            <div style = {style}>\n                <p><b>{props.msg}</b></p>\n            </div>\n        );\n\n    }\n\n    return (\n        <Fragment>\n                {\n                   ComprobarStatus()\n                }\n        </Fragment>\n    )\n\n};\n\n\nexport default Msgresponse;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nimport '../components/css/Login.css'\n\nimport Msgresponse from '../components/Msgresponse';\n\nconst Login = () => {\n\n\n    // DATOS DE ESTADO\n    const [datos, setDatos] = useState({\n        UserName: '',\n        Clave: '',\n        ResultServer: {}\n    })\n\n    // CAMBIAR DATOS DE ESTADO\n    const handleChange = e => {\n\n        setDatos({\n            ...datos,\n            [e.target.name]: e.target.value,\n        });\n\n        console.log(datos);\n\n    }\n\n    // ENVIAR DATOS DE LOGIN\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        let datosform = new FormData(document.getElementById('form-login'));\n\n        let paquete = {\n            method: \"POST\",\n            mode: 'cors',\n            body: datosform\n        };\n\n        fetch('Login', paquete)\n            .then(response => response.json())\n            .catch(err => console.error(err))\n            .then(response => {\n\n                // Obtener resultados del intento de logueo\n                let form = {\n                    exito: response.status === 200 ? true : false,\n                    msg: response.message\n                }\n\n                setDatos({\n                    ...datos,\n                    ['ResultServer']: form,\n                });\n\n            });\n\n        console.log(datos);\n    }\n\n    return (\n        <div className='p-container'>\n            <div className='p-container'>\n                <div className='container-form-login'>\n                    <form id='form-login' onSubmit={handleSubmit}>\n\n                        <header>\n                            <h2>Iniciar de Sesion</h2>\n                        </header>\n\n                        <input\n                            type='text'\n                            name='UserName'\n                            placeholder='Nombre de usuario o correo'\n                            value={datos.UserName}\n                            onChange={handleChange}\n                        />\n                        <input\n                            type='password'\n                            name='Clave'\n                            placeholder='Contraseña'\n                            value={datos.Clave}\n                            onChange={handleChange}\n                        />\n                        <div>\n                            {\n                                datos.ResultServer.exito === false\n                                    ? <Msgresponse color = 'red' msg = {datos.ResultServer.msg}/>\n                                    : ''\n                            }\n                        </div>\n                        <button type='submit'>\n                            Iniciar\n                        </button>\n                    </form>\n                </div>\n\n                <div>\n                    {\n                        datos.ResultServer.exito\n                            ? <Redirect to='/sesion' />\n                            : ''\n                    }\n                </div>\n            </div>\n        </div>\n    );\n\n\n}\n\n\nexport default Login;","import React, { Fragment } from 'react';\n\nconst Imgmsg = (props) =>(\n\n    <Fragment>\n        <div style ={{\n            backgroundImage:  `url(${props.img})`,\n            backgroundSize: 'auto',\n        }}>\n            <header>\n                <h3>{props.title}</h3>\n            </header>\n            <p>\n                {props.message}\n            </p>\n        </div>\n    </Fragment>\n\n);\n\n\nexport default Imgmsg;","export default __webpack_public_path__ + \"static/media/RegisterFondo.9679f7b7.png\";","import React, { useState } from 'react';\n\nimport Imgmsg from '../components/Imgmsg'\nimport Msgresponse from '../components/Msgresponse';\n\nimport '../components/css/Register.css'\nimport Fondo from '../images/RegisterFondo.png'\n\n// HOOK DE REGISTRO\nconst Register = (props) => {\n\n    // DATOS DE ESTADO\n    const [datos, setDatos] = useState({\n        UserName: '',\n        Correo: '',\n        Clave: '',\n        ConfirmarClave: '',\n        serverResponse: {},\n        FormError: {}\n    })\n\n    const { history } = props\n\n    // evento de registrar\n    const handleRegister = e => {\n        e.preventDefault();\n\n        if (verificarContraseñas()) {\n            let form = document.getElementById(\"form-register\");\n\n            let paquete = {\n                method: \"POST\",\n                body: new FormData(form)\n            };\n\n            fetch('Register', paquete)\n                .then(response => response.json())\n                .then(response => {\n\n                    setDatos({\n                        ...datos,\n                        ['serverResponse']: response\n                    });\n\n                });\n\n        } else {\n            console.log(\"Contraseñas no congruentes\");\n        }\n\n    }\n\n    // al cambiar algún dato del formulario\n    const handleChangeData = e => {\n\n        setDatos({\n            ...datos,\n            [e.target.name]: e.target.value,\n            ['FormError']: verifFormulario()\n        });\n\n    }\n\n    // VERIFICACION DE CONTRASEÑAS\n    const verificarContraseñas = () => {\n\n        if (datos['ConfirmarClave'].length !== 0) {\n            if (datos['Clave'] === datos['ConfirmarClave']) {\n                return true; /* Contraseñas coinciden */\n            }\n        }\n\n        return false; /* Contraseñas no coinciden */\n    }\n\n    const verifFormulario = () =>{\n\n        let form = {\n            color: '',\n            msg: ''\n        }\n\n        if((datos.UserName === '') ||\n            (datos.Correo === '') ||\n            (datos.Clave === '')){\n\n            form['color'] = 'red';\n            form['msg'] = 'Rellene todo el formulario';\n\n        }else if(verificarContraseñas()){\n            form['color'] = 'red';\n            form['msg'] = 'Claves no coinciden';\n        }else{\n            form = {}\n        }\n        \n        return form;\n    }\n\n\n    // RENDERIZADO DEL COMPONENTE (O PAGE)\n    return (\n        <div className='container'>\n\n            <div className='container-img'>\n                <Imgmsg img={Fondo} />\n            </div>\n\n            <div>\n                <div className='container-form'>\n\n                    <header>\n                        <h2>¡Registrarse Ahora!</h2>\n                    </header>\n\n                    <form id=\"form-register\" onSubmit={handleRegister}>\n                        <input name=\"UserName\" type=\"text\"\n                            placeholder=\"Nombre de usuario\"\n                            onChange={handleChangeData}\n                            value={datos.UserName} />\n                        <input name=\"Correo\" type=\"email\"\n                            placeholder=\"Correo Electronico\"\n                            onChange={handleChangeData}\n                            value={datos.Correo} />\n                        <input name=\"Clave\" type=\"password\"\n                            placeholder=\"Contraseña\"\n                            onChange={handleChangeData}\n                            value={datos.Clave} />\n                        <input name=\"ConfirmarClave\" type=\"password\"\n                            placeholder=\"Confirmar Contraseña\"\n                            onChange={handleChangeData}\n                            value={datos.ConfirmarClave} />\n\n                        <div>\n                            {\n                                datos.serverResponse || datos.FormError ?\n                                    <Msgresponse status={datos.serverResponse.status} color = {datos.FormError.color}\n                                        msg={datos.serverResponse.message || datos.FormError.msg} />\n                                    : ''\n                            }\n                        </div>\n\n                        <button type=\"submit\">\n                            Relizar registro\n                        </button>\n\n                        <div>\n                            {\n                                datos.serverResponse.status === 200\n                                    ? <button  onClick={() => history.push('/login')}>\n                                        Ir al login\n                                    </button>\n                                    : ''\n                            }\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Register;","import React from 'react';\n\nclass Sesion extends React.Component{\n\n    render(){\n\n        return(\n            <div>\n                <h1>PAGINA DE INICIO</h1>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Sesion;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Inicio from './pages/Inicio';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Sesion from './pages/Sesion';\n\n// REACT ROUTER, SE ENCARGAR DE RENDERIZAR LAS PAGINAS (O GRANDES COMPONENTES) DE LA APP\n// ESTO POR MEDIO DE RUTAS\nconst App = () => {\n\n    return(\n        <Router>\n            <Route exact path = '/' component = {Inicio}/>\n            <Route exact path = '/login' component = {Login}/>\n            <Route exact path = '/register' component = {Register}/>\n            <Route exact path = '/sesion' component = {Sesion}/>\n        </Router>\n    );\n\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nconst contenedor = document.getElementById('root'); // Obtenemos el contenedor principal\n\nReactDOM.render(<App/>, contenedor);"],"sourceRoot":""}